<UserControl x:Class="WhiteBoard.View.DrawView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WhiteBoard.View"
             mc:Ignorable="d" 
             xmlns:mD="http://materialdesigninxaml.net/winfx/xaml/themes"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="24"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             FontFamily="{DynamicResource MaterialDesignFont}"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ControlTemplate x:Key="TopNenuButtons" TargetType="Button">
            <Grid Name="Btn" Height="40px" Margin="20 0 0 0">
                <Border>
                    <Grid>
                        <Label Content="{TemplateBinding Content}" Background="Transparent" FontSize="23" VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="#FF9D9999"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" 
                                                     Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                            Mode=FindAncestor, 
                                            AncestorType={x:Type Button}}, 
                                            Path = IsPressed}" Value="true">
                                            <Setter Property="Foreground" Value="#FF9D9999"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                            Mode=FindAncestor, 
                                            AncestorType={x:Type Button}}, 
                                            Path = IsFocused}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                        <Label Content="{TemplateBinding Content}"
                           Background="Transparent" Margin="-3 0 0 0"
                           VerticalAlignment="Center" FontSize="23" FontWeight="Bold">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                            Mode=FindAncestor, 
                                            AncestorType={x:Type Button}}, 
                                            Path = IsFocused}" Value="true">
                                            <DataTrigger.Setters>
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <BlurEffect Radius="25"/>
                                                    </Setter.Value>
                                                </Setter>

                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                    </Grid>
                </Border>
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="DimGray" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="SlideMenu" TargetType="Button">
            <Grid Name="Btn" Height="45">
                <Border>
                    <StackPanel Orientation="Horizontal">
                    </StackPanel>
                </Border>
            </Grid>
        </ControlTemplate>
    </UserControl.Resources>

    <Grid Background="#11131B">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.12*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Background="#253245">
            <Border BorderBrush="#FF303031" BorderThickness="1"/>
        </Grid>

        <Grid Grid.Row="1">
            <Border BorderBrush="#FF303031" BorderThickness="1"/>
            <ScrollViewer>
                <StackPanel>
                    <InkCanvas x:Name="MyInkCanvas" 
                               Background="#11131B"
                               EditingMode ="{Binding MyInkCanvasEditing, Mode=TwoWay}"
                               EditingModeInverted="EraseByPoint"
                               DefaultDrawingAttributes="{Binding DrawingAttributes}">
                        <Image Source="{Binding ImagePath}"/>
                    </InkCanvas>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <StackPanel VerticalAlignment="Center" 
                    Orientation="Horizontal"
                    HorizontalAlignment="Left">

            <Menu VerticalAlignment="Center">
                <MenuItem>
                    <MenuItem.Header>
                        <TextBlock Text="Menu" 
                                   FontSize="20" 
                                   Foreground="LightGray"/>
                    </MenuItem.Header>

                    <MenuItem Header="Save"
                              Command="{Binding SaveCommand}"
                              CommandParameter="{Binding ElementName=MyInkCanvas}"/>
                    <MenuItem Header="Save as"
                              Command="{Binding SaveAsCommand}"
                              CommandParameter="{Binding ElementName=MyInkCanvas}"/>
                    <MenuItem Header="Send"
                              Command="{Binding SendCommand}"
                              CommandParameter="{Binding ElementName=MyInkCanvas}"/>
                    <MenuItem Header="Print"
                              Command="{Binding PrintCommand}"
                              CommandParameter="{Binding ElementName=MyInkCanvas}"/>
                </MenuItem>
            </Menu>

            <Button Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding PenCommand}">

                <mD:PackIcon Width="30px" 
                             Height="25px" 
                             Kind="Pen" 
                             Foreground="LightGray"/>
            </Button>

            <Button Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding EraserCommand}">

                <mD:PackIcon Width="30px" 
                             Height="25px" 
                             Kind="Eraser" 
                             Foreground="LightGray"/>
            </Button>

            <Button Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding SelectShapeCommand}">

                <mD:PackIcon Width="30px" 
                             Height="25px" 
                             Kind="Rectangle" 
                             Foreground="LightGray"/>
            </Button>

            <Button Background="Transparent"
                    BorderBrush="Transparent">

                <mD:PackIcon Width="30px" 
                             Height="25px" 
                             Kind="Circle" 
                             Foreground="LightGray"/>
            </Button>

            <Button Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding SelectShapeCommand}">

                <mD:PackIcon Width="30px" 
                             Height="25px" 
                             Kind="Triangle" 
                             Foreground="LightGray"/>
            </Button>

            <ToggleButton x:Name="ColorPickerButton" 
                          Width="40" 
                          Height="40"
                          BorderThickness="0">
                
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Background" 
                                Value="Transparent"/>
                    </Style>
                </ToggleButton.Style>
                
                <Grid>
                    <mD:PackIcon Width="30px" 
                                 Height="25px" 
                                 Kind="Color"
                                 Foreground="LightGray"/>
                    
                    <Popup x:Name="ColorPickerPopup" 
                           IsOpen="{Binding IsChecked, ElementName=ColorPickerButton}"
                           Placement="Bottom" 
                           StaysOpen="False" 
                           PopupAnimation="None">
                        
                        <StackPanel Width="140px">
                            <ItemsControl x:Name="ColorPalette" 
                                          ItemsSource="{Binding ColorList.AvailableColors}">

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Width="20" 
                                                Height="20" 
                                                Background="{Binding ColorValue}"
                                                Command="{Binding Path=DataContext.ChoiceColor, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                CommandParameter="{Binding ColorName}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </StackPanel>
                    </Popup>
                </Grid>
            </ToggleButton>

            <Button Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding SelectTextCommand}">

                <mD:PackIcon Width="30px" 
                             Height="25px" 
                             Kind="FontSize" 
                             Foreground="LightGray"/>
            </Button>

            <TextBox Width="170" 
                     Margin="10"
                     Text="{Binding TempImgName}"
                     Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                     Background="#2D3238"
                     Foreground="WhiteSmoke"
                     FontSize="20"
                     BorderBrush="#11131B"/>

            <Button Background="#1E84FF"
                    Command="{Binding SaveNameCommand}"
                    Margin="0 10 0 10"
                    BorderBrush="#11131B">

                <mD:PackIcon Width="30px" 
                             Height="25px" 
                             Kind="Check" 
                             Foreground="WhiteSmoke"/>
            </Button>
        </StackPanel>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Back"
                    Template="{StaticResource ResourceKey=TopNenuButtons}"
                    Command="{Binding BackCommand}"
                    Margin="0 -10 10 0"/>

            <Button Content="Log out"
                Template="{StaticResource ResourceKey=TopNenuButtons}"
                Command="{Binding LogOutCommand}"
                Margin="0 -10 20 0"/>
        </StackPanel>
    </Grid>
</UserControl>